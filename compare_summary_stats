{# Helper macro to generate column stats #}
{% macro get_column_stats_sql(columns) %}
    COUNT(*)::BIGINT as row_count
    {% for column in columns %}
        ,COUNT({{ column.name }})::BIGINT as non_null_{{ column.name }}_count
        ,COUNT(DISTINCT {{ column.name }})::BIGINT as distinct_{{ column.name }}_count
        ,COUNT(DISTINCT CASE WHEN {{ column.name }} IS NOT NULL THEN {{ column.name }} END)::BIGINT as distinct_non_null_{{ column.name }}_count
        {% if column.is_number() %}
            ,MIN({{ column.name }})::NUMERIC(38,2) as min_{{ column.name }}
            ,MAX({{ column.name }})::NUMERIC(38,2) as max_{{ column.name }}
            ,AVG({{ column.name }})::NUMERIC(38,2) as avg_{{ column.name }}
        {% endif %}
    {% endfor %}
{% endmacro %}

{# Main comparison macro #}
{% macro compare_schema_models(model_name) %}
    {% set dev_schema = 'NULL' %}
    {% set uat_schema = 'NULL' %}
    
    {% set model_relation = ref(model_name) %}
    {% set columns = adapter.get_columns_in_relation(model_relation) %}
    
    {% set query %}
    WITH dev_stats AS (
        SELECT 
            {{ get_column_stats_sql(columns) }}
        FROM {{ model_relation }}
    ),
    uat_stats AS (
        SELECT 
            {{ get_column_stats_sql(columns) }}
        FROM {{ uat_schema }}.{{ model_name }}
    ),
    metrics AS (
        SELECT 
            '{{ model_name }}'::VARCHAR as model_name,
            GETDATE()::TIMESTAMP as comparison_timestamp,
            'row_count'::VARCHAR as metric_name,
            dev_stats.row_count::VARCHAR as dev_value,
            uat_stats.row_count::VARCHAR as uat_value,
            (uat_stats.row_count - dev_stats.row_count)::NUMERIC(38,2) as difference,
            CASE 
                WHEN dev_stats.row_count = 0 THEN NULL::NUMERIC(38,2)
                ELSE ((uat_stats.row_count::FLOAT - dev_stats.row_count) / dev_stats.row_count * 100)::NUMERIC(38,2)
            END as percent_change
        FROM dev_stats, uat_stats

        {% for column in columns %}
            UNION ALL
            SELECT 
                '{{ model_name }}'::VARCHAR,
                GETDATE()::TIMESTAMP,
                'non_null_{{ column.name }}_count'::VARCHAR,
                dev_stats.non_null_{{ column.name }}_count::VARCHAR,
                uat_stats.non_null_{{ column.name }}_count::VARCHAR,
                (uat_stats.non_null_{{ column.name }}_count - dev_stats.non_null_{{ column.name }}_count)::NUMERIC(38,2),
                CASE 
                    WHEN dev_stats.non_null_{{ column.name }}_count = 0 THEN NULL::NUMERIC(38,2)
                    ELSE ((uat_stats.non_null_{{ column.name }}_count::FLOAT - dev_stats.non_null_{{ column.name }}_count) 
                          / dev_stats.non_null_{{ column.name }}_count * 100)::NUMERIC(38,2)
                END
            FROM dev_stats, uat_stats

            UNION ALL
            SELECT 
                '{{ model_name }}'::VARCHAR,
                GETDATE()::TIMESTAMP,
                'distinct_{{ column.name }}_count'::VARCHAR,
                dev_stats.distinct_{{ column.name }}_count::VARCHAR,
                uat_stats.distinct_{{ column.name }}_count::VARCHAR,
                (uat_stats.distinct_{{ column.name }}_count - dev_stats.distinct_{{ column.name }}_count)::NUMERIC(38,2),
                CASE 
                    WHEN dev_stats.distinct_{{ column.name }}_count = 0 THEN NULL::NUMERIC(38,2)
                    ELSE ((uat_stats.distinct_{{ column.name }}_count::FLOAT - dev_stats.distinct_{{ column.name }}_count) 
                          / dev_stats.distinct_{{ column.name }}_count * 100)::NUMERIC(38,2)
                END
            FROM dev_stats, uat_stats

            UNION ALL
            SELECT 
                '{{ model_name }}'::VARCHAR,
                GETDATE()::TIMESTAMP,
                'distinct_non_null_{{ column.name }}_count'::VARCHAR,
                dev_stats.distinct_non_null_{{ column.name }}_count::VARCHAR,
                uat_stats.distinct_non_null_{{ column.name }}_count::VARCHAR,
                (uat_stats.distinct_non_null_{{ column.name }}_count - dev_stats.distinct_non_null_{{ column.name }}_count)::NUMERIC(38,2),
                CASE 
                    WHEN dev_stats.distinct_non_null_{{ column.name }}_count = 0 THEN NULL::NUMERIC(38,2)
                    ELSE ((uat_stats.distinct_non_null_{{ column.name }}_count::FLOAT - dev_stats.distinct_non_null_{{ column.name }}_count) 
                          / dev_stats.distinct_non_null_{{ column.name }}_count * 100)::NUMERIC(38,2)
                END
            FROM dev_stats, uat_stats

            {% if column.is_number() %}
                UNION ALL
                SELECT 
                    '{{ model_name }}'::VARCHAR,
                    GETDATE()::TIMESTAMP,
                    'min_{{ column.name }}'::VARCHAR,
                    dev_stats.min_{{ column.name }}::VARCHAR,
                    uat_stats.min_{{ column.name }}::VARCHAR,
                    (uat_stats.min_{{ column.name }} - dev_stats.min_{{ column.name }})::NUMERIC(38,2),
                    CASE 
                        WHEN dev_stats.min_{{ column.name }} = 0 THEN NULL::NUMERIC(38,2)
                        ELSE ((uat_stats.min_{{ column.name }}::FLOAT - dev_stats.min_{{ column.name }}) 
                              / dev_stats.min_{{ column.name }} * 100)::NUMERIC(38,2)
                    END
                FROM dev_stats, uat_stats

                UNION ALL
                SELECT 
                    '{{ model_name }}'::VARCHAR,
                    GETDATE()::TIMESTAMP,
                    'max_{{ column.name }}'::VARCHAR,
                    dev_stats.max_{{ column.name }}::VARCHAR,
                    uat_stats.max_{{ column.name }}::VARCHAR,
                    (uat_stats.max_{{ column.name }} - dev_stats.max_{{ column.name }})::NUMERIC(38,2),
                    CASE 
                        WHEN dev_stats.max_{{ column.name }} = 0 THEN NULL::NUMERIC(38,2)
                        ELSE ((uat_stats.max_{{ column.name }}::FLOAT - dev_stats.max_{{ column.name }}) 
                              / dev_stats.max_{{ column.name }} * 100)::NUMERIC(38,2)
                    END
                FROM dev_stats, uat_stats

                UNION ALL
                SELECT 
                    '{{ model_name }}'::VARCHAR,
                    GETDATE()::TIMESTAMP,
                    'avg_{{ column.name }}'::VARCHAR,
                    dev_stats.avg_{{ column.name }}::VARCHAR,
                    uat_stats.avg_{{ column.name }}::VARCHAR,
                    (uat_stats.avg_{{ column.name }} - dev_stats.avg_{{ column.name }})::NUMERIC(38,2),
                    CASE 
                        WHEN dev_stats.avg_{{ column.name }} = 0 THEN NULL::NUMERIC(38,2)
                        ELSE ((uat_stats.avg_{{ column.name }}::FLOAT - dev_stats.avg_{{ column.name }}) 
                              / dev_stats.avg_{{ column.name }} * 100)::NUMERIC(38,2)
                    END
                FROM dev_stats, uat_stats
            {% endif %}
        {% endfor %}
    )
    SELECT 
        model_name,
        comparison_timestamp,
        metric_name,
        dev_value,
        uat_value,
        difference,
        percent_change
    FROM metrics
    ORDER BY 
        comparison_timestamp,
        model_name,
        metric_name
    {% endset %}

    {% set results = run_query(query) %}
    
    {% if execute %}
        {# Create output content #}
        {% set output_lines = [] %}
        {% do output_lines.append('model_name,comparison_timestamp,metric_name,dev_value,uat_value,difference,percent_change') %}
        
        {% for row in results.rows %}
            {% do output_lines.append(row[0] ~ ',' ~ row[1] ~ ',' ~ row[2] ~ ',' ~ row[3] ~ ',' ~ row[4] ~ ',' ~ row[5] ~ ',' ~ row[6]) %}
        {% endfor %}

        {% set timestamp = modules.datetime.datetime.now().strftime('%Y%m%d_%H%M%S') %}
        {% set output_path = '/tmp/' ~ model_name ~ '_comparison_' ~ timestamp ~ '.csv' %}
        
        {# Write to file #}
        {% do open(output_path, 'w').write('\n'.join(output_lines)) %}
        
        {# Print to console #}
        {{ log('=== Comparison Results ===', info=true) }}
        {{ log('Model Name: ' ~ model_name, info=true) }}
        {{ log('Results saved to: ' ~ output_path, info=true) }}
        {{ log('', info=true) }}
        {% for line in output_lines %}
            {{ log(line, info=true) }}
        {% endfor %}
    {% endif %}
    
    {{ return(results) }}
{% endmacro %}
    
    {{ return(results) }}
{% endmacro %}
